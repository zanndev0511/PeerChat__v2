import type { SideEffectManager } from "side-effect-manager";
import type { Combine } from "./combine";
import { Val } from "./val";
import type { ValCompare } from "./typings";
export declare type BindSideEffect = <TVal extends Val>(val: TVal) => TVal;
export declare type CreateVal = <TValue = any, TMeta = any>(value: TValue, compare?: ValCompare<TValue>) => Val<TValue, TMeta>;
export declare type ValSideEffectBinder = {
    bindSideEffect: BindSideEffect;
    combine: Combine;
    createVal: CreateVal;
};
export declare function createSideEffectBinder(sideEffect: SideEffectManager): ValSideEffectBinder;

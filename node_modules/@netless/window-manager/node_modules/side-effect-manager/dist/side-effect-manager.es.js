const s="!#%()*+,-./:;=?@[]^_`{|}~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e=s.length,t=Array(20),i=()=>{for(let i=0;i<20;i++)t[i]=s.charAt(Math.random()*e);return t.join("")};class r{constructor(){this.disposers=new Map}addDisposer(s,e=i()){return this.flush(e),this.disposers.set(e,s),e}add(s,e=i()){return this.addDisposer(s(),e)}addEventListener(s,e,t,r,n=i()){return s.addEventListener(e,t,r),this.addDisposer((()=>s.removeEventListener(e,t,r)),n),n}setTimeout(s,e,t=i()){const r=window.setTimeout((()=>{this.remove(t),s()}),e);return this.addDisposer((()=>window.clearTimeout(r)),t)}setInterval(s,e,t=i()){const r=window.setInterval(s,e);return this.addDisposer((()=>window.clearInterval(r)),t)}remove(s){const e=this.disposers.get(s);return this.disposers.delete(s),e}flush(s){const e=this.remove(s);if(e)try{e()}catch(t){console.error(t)}}flushAll(){this.disposers.forEach((s=>{try{s()}catch(e){console.error(e)}})),this.disposers.clear()}}class n{constructor(){this.finished=Promise.resolve(),this.disposers=new Map,this._nextTask=new Map,this._isRunning=new Set}add(s,e=i()){return this._isRunning.has(e)?this._nextTask.set(e,(()=>this._add(s,e))):this._add(s,e),e}async _add(s,e){this._startTask(e);const t=this.remove(e);if(t)try{await t()}catch(r){console.error(r)}try{this.disposers.set(e,await s())}catch(r){console.error(r)}this._endTask(e);const i=this._nextTask.get(e);i&&(this._nextTask.delete(e),i())}remove(s){const e=this.disposers.get(s);return this.disposers.delete(s),e}flush(s){this._isRunning.has(s)?this._nextTask.set(s,(()=>this._flush(s))):this._flush(s)}async _flush(s){const e=this.remove(s);if(e){this._startTask(s);try{await e()}catch(i){console.error(i)}this._endTask(s)}const t=this._nextTask.get(s);t&&(this._nextTask.delete(s),t())}flushAll(){this.disposers.forEach(((s,e)=>this.flush(e)))}_startTask(s){this._isRunning.add(s),this._resolveFinished||(this.finished=new Promise((s=>{this._resolveFinished=s})))}_endTask(s){this._isRunning.delete(s),this._resolveFinished&&this._isRunning.size<=0&&this._nextTask.size<=0&&(this._resolveFinished(),this._resolveFinished=void 0)}}export{n as AsyncSideEffectManager,r as SideEffectManager,i as genUID};
//# sourceMappingURL=side-effect-manager.es.js.map

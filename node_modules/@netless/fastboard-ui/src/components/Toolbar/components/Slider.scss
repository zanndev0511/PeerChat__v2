@use "sass:color";
@import "../../theme.scss";

$active-shadow-width: 3px;
$thumb-height: 13px;
$track-height: 5px;
$shadow-color: hsl(210deg 15% 16%);
$thumb-color: white;

@mixin track {
  border: 0;
  border-radius: calc($track-height / 2);
  height: $track-height;
  transition: box-shadow 0.3s ease;
  user-select: none;
  background-color: rgba(grey, $alpha: 0.25);
  -webkit-user-select: none;
}

@mixin thumb {
  appearance: none;
  background: $thumb-color;
  border: 0;
  border-radius: 100%;
  box-shadow:
    0 1px 1px rgba($shadow-color, 0.15),
    0 0 0 1px rgba($shadow-color, 0.2);
  width: $thumb-height;
  height: $thumb-height;
  position: relative;
  transition: all 0.2s ease;
  cursor: grab;
}

.fastboard-slider {
  @include border-box;

  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
}

.fastboard-slider-track {
  appearance: none;
  background: transparent;
  border: 0;
  border-radius: $thumb-height * 2;

  flex: 1;
  display: block;
  height: calc($active-shadow-width * 2 + $thumb-height);
  margin: 0;
  width: 0;
  min-width: 0;
  padding: 0;
  transition: box-shadow 0.3s ease;

  cursor: pointer;
  touch-action: manipulation;

  &::-webkit-slider-runnable-track {
    @include track;

    background-image: linear-gradient(to right, currentColor var(--value, 0%), transparent var(--value, 0%));
  }

  &::-webkit-slider-thumb {
    @include thumb;

    appearance: none;
    margin-top: calc(($thumb-height - $track-height) / 2 * -1);
  }

  &::-moz-range-track {
    @include track;
  }

  &::-moz-range-thumb {
    @include thumb;
  }

  &::-moz-range-progress {
    background: currentColor;
    border-radius: calc($track-height / 2);
    height: $track-height;
  }

  &::-ms-track {
    @include track;

    color: transparent;
  }

  &::-ms-thumb {
    @include thumb;

    margin-top: 0;
  }

  &::-ms-tooltip {
    display: none;
  }

  &::-moz-focus-outer {
    border: 0;
  }

  &.grabbing {
    &::-webkit-slider-thumb {
      cursor: grabbing;
    }
  }

  @each $name, $theme in $themes {
    &.#{$name} {
      color: read($theme, "active-color");
    }
  }
}

"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemDataCreate = void 0;
/**
 * @internal
 * Contains data information applicable for each item type.
 */
class ItemDataCreate {
    constructor() {
        /**
         * Status indicating whether an app card is connected and in sync with the source. When the source for the app card is deleted, the status returns `disabled`.
         */
        this['status'] = ItemDataCreate.StatusEnum.Disconnected;
        /**
         * URL of the image.
         */
        this['url'] = 'https://miro.com/static/images/page/mr-index/localization/en/slider/ideation_brainstorming.png';
        /**
         * Defines the geometric shape of the sticky note and aspect ratio for its dimensions.
         */
        this['shape'] = ItemDataCreate.ShapeEnum.Square;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return ItemDataCreate.attributeTypeMap;
    }
}
exports.ItemDataCreate = ItemDataCreate;
/** @ignore */
ItemDataCreate.discriminator = undefined;
/** @ignore */
ItemDataCreate.attributeTypeMap = [
    {
        name: 'description',
        baseName: 'description',
        type: 'string',
    },
    {
        name: 'fields',
        baseName: 'fields',
        type: 'Array<CustomField>',
    },
    {
        name: 'status',
        baseName: 'status',
        type: 'ItemDataCreate.StatusEnum',
    },
    {
        name: 'title',
        baseName: 'title',
        type: 'string',
    },
    {
        name: 'assigneeId',
        baseName: 'assigneeId',
        type: 'string',
    },
    {
        name: 'dueDate',
        baseName: 'dueDate',
        type: 'Date',
    },
    {
        name: 'url',
        baseName: 'url',
        type: 'string',
    },
    {
        name: 'mode',
        baseName: 'mode',
        type: 'ItemDataCreate.ModeEnum',
    },
    {
        name: 'previewUrl',
        baseName: 'previewUrl',
        type: 'string',
    },
    {
        name: 'content',
        baseName: 'content',
        type: 'string',
    },
    {
        name: 'shape',
        baseName: 'shape',
        type: 'ItemDataCreate.ShapeEnum',
    },
];
(function (ItemDataCreate) {
    ItemDataCreate.StatusEnum = {
        Disconnected: 'disconnected',
        Connected: 'connected',
        Disabled: 'disabled',
    };
    ItemDataCreate.ModeEnum = {
        Inline: 'inline',
        Modal: 'modal',
    };
    ItemDataCreate.ShapeEnum = {
        Square: 'square',
        Rectangle: 'rectangle',
    };
})(ItemDataCreate = exports.ItemDataCreate || (exports.ItemDataCreate = {}));

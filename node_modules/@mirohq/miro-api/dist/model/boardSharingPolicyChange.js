"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BoardSharingPolicyChange = void 0;
/**
 * @internal
 * Defines the public-level, organization-level, and team-level access for the board. The access level that a user gets depends on the highest level of access that results from considering the public-level, team-level, organization-level, and direct sharing access.
 */
class BoardSharingPolicyChange {
    constructor() {
        /**
         * Defines the public-level access to the board.
         */
        this['access'] = BoardSharingPolicyChange.AccessEnum.Private;
        /**
         * Defines the user role when inviting a user via the invite to team and board link. For Enterprise users, the `inviteToAccountAndBoardLinkAccess` parameter is always set to `no_access` regardless of the value that you assign for this parameter.
         */
        this['inviteToAccountAndBoardLinkAccess'] = BoardSharingPolicyChange.InviteToAccountAndBoardLinkAccessEnum.NoAccess;
        /**
         * Defines the organization-level access to the board. If the board is created for a team that does not belong to an organization, the `organizationAccess` parameter is always set to the default value.
         */
        this['organizationAccess'] = BoardSharingPolicyChange.OrganizationAccessEnum.Private;
        /**
         * Defines the team-level access to the board.
         */
        this['teamAccess'] = BoardSharingPolicyChange.TeamAccessEnum.Private;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return BoardSharingPolicyChange.attributeTypeMap;
    }
}
exports.BoardSharingPolicyChange = BoardSharingPolicyChange;
/** @ignore */
BoardSharingPolicyChange.discriminator = undefined;
/** @ignore */
BoardSharingPolicyChange.attributeTypeMap = [
    {
        name: 'access',
        baseName: 'access',
        type: 'BoardSharingPolicyChange.AccessEnum',
    },
    {
        name: 'inviteToAccountAndBoardLinkAccess',
        baseName: 'inviteToAccountAndBoardLinkAccess',
        type: 'BoardSharingPolicyChange.InviteToAccountAndBoardLinkAccessEnum',
    },
    {
        name: 'organizationAccess',
        baseName: 'organizationAccess',
        type: 'BoardSharingPolicyChange.OrganizationAccessEnum',
    },
    {
        name: 'teamAccess',
        baseName: 'teamAccess',
        type: 'BoardSharingPolicyChange.TeamAccessEnum',
    },
];
(function (BoardSharingPolicyChange) {
    BoardSharingPolicyChange.AccessEnum = {
        Private: 'private',
        View: 'view',
        Edit: 'edit',
        Comment: 'comment',
    };
    BoardSharingPolicyChange.InviteToAccountAndBoardLinkAccessEnum = {
        Viewer: 'viewer',
        Commenter: 'commenter',
        Editor: 'editor',
        NoAccess: 'no_access',
    };
    BoardSharingPolicyChange.OrganizationAccessEnum = {
        Private: 'private',
        View: 'view',
        Comment: 'comment',
        Edit: 'edit',
    };
    BoardSharingPolicyChange.TeamAccessEnum = {
        Private: 'private',
        View: 'view',
        Comment: 'comment',
        Edit: 'edit',
    };
})(BoardSharingPolicyChange = exports.BoardSharingPolicyChange || (exports.BoardSharingPolicyChange = {}));

/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BoardLinks } from './boardLinks';
import { BoardMember } from './boardMember';
import { BoardPolicy } from './boardPolicy';
import { Picture } from './picture';
import { Project } from './project';
import { Team } from './team';
import { UserInfoShort } from './userInfoShort';
export declare class BoardWithLinks {
    /**
     * Unique identifier (ID) of the board.
     */
    'id': string;
    /**
     * Name of the board.
     */
    'name': string;
    /**
     * Description of the board.
     */
    'description': string;
    'team'?: Team;
    'project'?: Project;
    'picture'?: Picture;
    'policy'?: BoardPolicy;
    /**
     * URL to view the board.
     */
    'viewLink'?: string;
    'owner'?: UserInfoShort;
    'currentUserMembership'?: BoardMember;
    /**
     * Date and time when the board was created. Format: UTC, adheres to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing Z offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
     */
    'createdAt'?: Date;
    'createdBy'?: UserInfoShort;
    /**
     * Date and time when the board was last modified. Format: UTC, adheres to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing Z offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
     */
    'modifiedAt'?: Date;
    'modifiedBy'?: UserInfoShort;
    'links'?: BoardLinks;
    /**
     * Type of the object that is returned. In this case, type returns `board`.
     */
    'type': string;
    /** @ignore */
    static discriminator: string | undefined;
    /** @ignore */
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    /** @ignore */
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}

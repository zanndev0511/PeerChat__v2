"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamSharingPolicySettings = void 0;
/**
 * @internal
 * Team sharing policy settings
 */
class TeamSharingPolicySettings {
    /** @ignore */
    static getAttributeTypeMap() {
        return TeamSharingPolicySettings.attributeTypeMap;
    }
}
exports.TeamSharingPolicySettings = TeamSharingPolicySettings;
/** @ignore */
TeamSharingPolicySettings.discriminator = undefined;
/** @ignore */
TeamSharingPolicySettings.attributeTypeMap = [
    {
        name: 'allowListedDomains',
        baseName: 'allowListedDomains',
        type: 'Array<string>',
    },
    {
        name: 'createAssetAccessLevel',
        baseName: 'createAssetAccessLevel',
        type: 'TeamSharingPolicySettings.CreateAssetAccessLevelEnum',
    },
    {
        name: 'defaultBoardAccess',
        baseName: 'defaultBoardAccess',
        type: 'TeamSharingPolicySettings.DefaultBoardAccessEnum',
    },
    {
        name: 'defaultOrganizationAccess',
        baseName: 'defaultOrganizationAccess',
        type: 'TeamSharingPolicySettings.DefaultOrganizationAccessEnum',
    },
    {
        name: 'defaultProjectAccess',
        baseName: 'defaultProjectAccess',
        type: 'TeamSharingPolicySettings.DefaultProjectAccessEnum',
    },
    {
        name: 'moveBoardToAccount',
        baseName: 'moveBoardToAccount',
        type: 'TeamSharingPolicySettings.MoveBoardToAccountEnum',
    },
    {
        name: 'restrictAllowedDomains',
        baseName: 'restrictAllowedDomains',
        type: 'TeamSharingPolicySettings.RestrictAllowedDomainsEnum',
    },
    {
        name: 'sharingOnAccount',
        baseName: 'sharingOnAccount',
        type: 'TeamSharingPolicySettings.SharingOnAccountEnum',
    },
    {
        name: 'sharingOnOrganization',
        baseName: 'sharingOnOrganization',
        type: 'TeamSharingPolicySettings.SharingOnOrganizationEnum',
    },
    {
        name: 'sharingViaPublicLink',
        baseName: 'sharingViaPublicLink',
        type: 'TeamSharingPolicySettings.SharingViaPublicLinkEnum',
    },
];
(function (TeamSharingPolicySettings) {
    TeamSharingPolicySettings.CreateAssetAccessLevelEnum = {
        CompanyAdmins: 'company_admins',
        Admins: 'admins',
        AllMembers: 'all_members',
    };
    TeamSharingPolicySettings.DefaultBoardAccessEnum = {
        Private: 'private',
        View: 'view',
        Comment: 'comment',
        Edit: 'edit',
    };
    TeamSharingPolicySettings.DefaultOrganizationAccessEnum = {
        Private: 'private',
        View: 'view',
        Comment: 'comment',
        Edit: 'edit',
    };
    TeamSharingPolicySettings.DefaultProjectAccessEnum = {
        Private: 'private',
        View: 'view',
    };
    TeamSharingPolicySettings.MoveBoardToAccountEnum = {
        Allowed: 'allowed',
        NotAllowed: 'not_allowed',
    };
    TeamSharingPolicySettings.RestrictAllowedDomainsEnum = {
        Enabled: 'enabled',
        EnabledWithExternalUserAccess: 'enabled_with_external_user_access',
        Disabled: 'disabled',
    };
    TeamSharingPolicySettings.SharingOnAccountEnum = {
        Allowed: 'allowed',
        NotAllowed: 'not_allowed',
    };
    TeamSharingPolicySettings.SharingOnOrganizationEnum = {
        Allowed: 'allowed',
        AllowedWithEditing: 'allowed_with_editing',
        NotAllowed: 'not_allowed',
    };
    TeamSharingPolicySettings.SharingViaPublicLinkEnum = {
        Allowed: 'allowed',
        AllowedWithEditing: 'allowed_with_editing',
        NotAllowed: 'not_allowed',
    };
})(TeamSharingPolicySettings = exports.TeamSharingPolicySettings || (exports.TeamSharingPolicySettings = {}));

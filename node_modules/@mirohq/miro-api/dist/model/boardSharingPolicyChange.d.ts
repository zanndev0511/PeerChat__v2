/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * @internal
 * Defines the public-level, organization-level, and team-level access for the board. The access level that a user gets depends on the highest level of access that results from considering the public-level, team-level, organization-level, and direct sharing access.
 */
export declare class BoardSharingPolicyChange {
    /**
     * Defines the public-level access to the board.
     */
    'access'?: string | (typeof BoardSharingPolicyChange.AccessEnum)[keyof typeof BoardSharingPolicyChange.AccessEnum];
    /**
     * Defines the user role when inviting a user via the invite to team and board link. For Enterprise users, the `inviteToAccountAndBoardLinkAccess` parameter is always set to `no_access` regardless of the value that you assign for this parameter.
     */
    'inviteToAccountAndBoardLinkAccess'?: string | (typeof BoardSharingPolicyChange.InviteToAccountAndBoardLinkAccessEnum)[keyof typeof BoardSharingPolicyChange.InviteToAccountAndBoardLinkAccessEnum];
    /**
     * Defines the organization-level access to the board. If the board is created for a team that does not belong to an organization, the `organizationAccess` parameter is always set to the default value.
     */
    'organizationAccess'?: string | (typeof BoardSharingPolicyChange.OrganizationAccessEnum)[keyof typeof BoardSharingPolicyChange.OrganizationAccessEnum];
    /**
     * Defines the team-level access to the board.
     */
    'teamAccess'?: string | (typeof BoardSharingPolicyChange.TeamAccessEnum)[keyof typeof BoardSharingPolicyChange.TeamAccessEnum];
    /** @ignore */
    static discriminator: string | undefined;
    /** @ignore */
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    /** @ignore */
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace BoardSharingPolicyChange {
    const AccessEnum: {
        readonly Private: "private";
        readonly View: "view";
        readonly Edit: "edit";
        readonly Comment: "comment";
    };
    const InviteToAccountAndBoardLinkAccessEnum: {
        readonly Viewer: "viewer";
        readonly Commenter: "commenter";
        readonly Editor: "editor";
        readonly NoAccess: "no_access";
    };
    const OrganizationAccessEnum: {
        readonly Private: "private";
        readonly View: "view";
        readonly Comment: "comment";
        readonly Edit: "edit";
    };
    const TeamAccessEnum: {
        readonly Private: "private";
        readonly View: "view";
        readonly Comment: "comment";
        readonly Edit: "edit";
    };
}

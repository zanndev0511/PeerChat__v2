"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShapeDataPlatformBulkCreateOperationExperimentalRelease = void 0;
/**
 * @internal
 * Contains shape item data, such as the content or shape type of the shape.
 */
class ShapeDataPlatformBulkCreateOperationExperimentalRelease {
    constructor() {
        /**
         * Defines the geometric shape of the item when it is rendered on the board.
         */
        this['shape'] = ShapeDataPlatformBulkCreateOperationExperimentalRelease.ShapeEnum.Rectangle;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return ShapeDataPlatformBulkCreateOperationExperimentalRelease.attributeTypeMap;
    }
}
exports.ShapeDataPlatformBulkCreateOperationExperimentalRelease = ShapeDataPlatformBulkCreateOperationExperimentalRelease;
/** @ignore */
ShapeDataPlatformBulkCreateOperationExperimentalRelease.discriminator = undefined;
/** @ignore */
ShapeDataPlatformBulkCreateOperationExperimentalRelease.attributeTypeMap = [
    {
        name: 'content',
        baseName: 'content',
        type: 'string',
    },
    {
        name: 'shape',
        baseName: 'shape',
        type: 'ShapeDataPlatformBulkCreateOperationExperimentalRelease.ShapeEnum',
    },
];
(function (ShapeDataPlatformBulkCreateOperationExperimentalRelease) {
    ShapeDataPlatformBulkCreateOperationExperimentalRelease.ShapeEnum = {
        Rectangle: 'rectangle',
        RoundRectangle: 'round_rectangle',
        Circle: 'circle',
        Triangle: 'triangle',
        Rhombus: 'rhombus',
        Parallelogram: 'parallelogram',
        Trapezoid: 'trapezoid',
        Pentagon: 'pentagon',
        Hexagon: 'hexagon',
        Octagon: 'octagon',
        WedgeRoundRectangleCallout: 'wedge_round_rectangle_callout',
        Star: 'star',
        FlowChartPredefinedProcess: 'flow_chart_predefined_process',
        Cloud: 'cloud',
        Cross: 'cross',
        Can: 'can',
        RightArrow: 'right_arrow',
        LeftArrow: 'left_arrow',
        LeftRightArrow: 'left_right_arrow',
        LeftBrace: 'left_brace',
        RightBrace: 'right_brace',
    };
})(ShapeDataPlatformBulkCreateOperationExperimentalRelease = exports.ShapeDataPlatformBulkCreateOperationExperimentalRelease || (exports.ShapeDataPlatformBulkCreateOperationExperimentalRelease = {}));

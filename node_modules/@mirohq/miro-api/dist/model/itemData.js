"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemData = void 0;
/**
 * @internal
 * Contains information about item-specific data.
 */
class ItemData {
    constructor() {
        /**
         * Defines the geometric shape of the sticky note and aspect ratio for its dimensions.
         */
        this['shape'] = ItemData.ShapeEnum.Square;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return ItemData.attributeTypeMap;
    }
}
exports.ItemData = ItemData;
/** @ignore */
ItemData.discriminator = undefined;
/** @ignore */
ItemData.attributeTypeMap = [
    {
        name: 'description',
        baseName: 'description',
        type: 'string',
    },
    {
        name: 'fields',
        baseName: 'fields',
        type: 'Array<CustomField>',
    },
    {
        name: 'owned',
        baseName: 'owned',
        type: 'boolean',
    },
    {
        name: 'status',
        baseName: 'status',
        type: 'ItemData.StatusEnum',
    },
    {
        name: 'title',
        baseName: 'title',
        type: 'string',
    },
    {
        name: 'assigneeId',
        baseName: 'assigneeId',
        type: 'string',
    },
    {
        name: 'dueDate',
        baseName: 'dueDate',
        type: 'Date',
    },
    {
        name: 'documentUrl',
        baseName: 'documentUrl',
        type: 'string',
    },
    {
        name: 'contentType',
        baseName: 'contentType',
        type: 'string',
    },
    {
        name: 'html',
        baseName: 'html',
        type: 'string',
    },
    {
        name: 'mode',
        baseName: 'mode',
        type: 'ItemData.ModeEnum',
    },
    {
        name: 'previewUrl',
        baseName: 'previewUrl',
        type: 'string',
    },
    {
        name: 'providerName',
        baseName: 'providerName',
        type: 'string',
    },
    {
        name: 'providerUrl',
        baseName: 'providerUrl',
        type: 'string',
    },
    {
        name: 'url',
        baseName: 'url',
        type: 'string',
    },
    {
        name: 'imageUrl',
        baseName: 'imageUrl',
        type: 'string',
    },
    {
        name: 'content',
        baseName: 'content',
        type: 'string',
    },
    {
        name: 'shape',
        baseName: 'shape',
        type: 'ItemData.ShapeEnum',
    },
];
(function (ItemData) {
    ItemData.StatusEnum = {
        Disconnected: 'disconnected',
        Connected: 'connected',
        Disabled: 'disabled',
    };
    ItemData.ModeEnum = {
        Inline: 'inline',
        Modal: 'modal',
    };
    ItemData.ShapeEnum = {
        Square: 'square',
        Rectangle: 'rectangle',
    };
})(ItemData = exports.ItemData || (exports.ItemData = {}));

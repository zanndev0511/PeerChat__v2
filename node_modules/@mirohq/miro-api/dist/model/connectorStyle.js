"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectorStyle = void 0;
/**
 * @internal
 * Contains information about the style of a connector, such as the color or caption font size
 */
class ConnectorStyle {
    /** @ignore */
    static getAttributeTypeMap() {
        return ConnectorStyle.attributeTypeMap;
    }
}
exports.ConnectorStyle = ConnectorStyle;
/** @ignore */
ConnectorStyle.discriminator = undefined;
/** @ignore */
ConnectorStyle.attributeTypeMap = [
    {
        name: 'color',
        baseName: 'color',
        type: 'string',
    },
    {
        name: 'endStrokeCap',
        baseName: 'endStrokeCap',
        type: 'ConnectorStyle.EndStrokeCapEnum',
    },
    {
        name: 'fontSize',
        baseName: 'fontSize',
        type: 'string',
    },
    {
        name: 'startStrokeCap',
        baseName: 'startStrokeCap',
        type: 'ConnectorStyle.StartStrokeCapEnum',
    },
    {
        name: 'strokeColor',
        baseName: 'strokeColor',
        type: 'string',
    },
    {
        name: 'strokeStyle',
        baseName: 'strokeStyle',
        type: 'ConnectorStyle.StrokeStyleEnum',
    },
    {
        name: 'strokeWidth',
        baseName: 'strokeWidth',
        type: 'string',
    },
    {
        name: 'textOrientation',
        baseName: 'textOrientation',
        type: 'ConnectorStyle.TextOrientationEnum',
    },
];
(function (ConnectorStyle) {
    ConnectorStyle.EndStrokeCapEnum = {
        None: 'none',
        Stealth: 'stealth',
        Diamond: 'diamond',
        DiamondFilled: 'diamond_filled',
        Oval: 'oval',
        OvalFilled: 'oval_filled',
        Arrow: 'arrow',
        Triangle: 'triangle',
        TriangleFilled: 'triangle_filled',
        ErdOne: 'erd_one',
        ErdMany: 'erd_many',
        ErdOnlyOne: 'erd_only_one',
        ErdZeroOrOne: 'erd_zero_or_one',
        ErdOneOrMany: 'erd_one_or_many',
        ErdZeroOrMany: 'erd_zero_or_many',
    };
    ConnectorStyle.StartStrokeCapEnum = {
        None: 'none',
        Stealth: 'stealth',
        Diamond: 'diamond',
        DiamondFilled: 'diamond_filled',
        Oval: 'oval',
        OvalFilled: 'oval_filled',
        Arrow: 'arrow',
        Triangle: 'triangle',
        TriangleFilled: 'triangle_filled',
        ErdOne: 'erd_one',
        ErdMany: 'erd_many',
        ErdOnlyOne: 'erd_only_one',
        ErdZeroOrOne: 'erd_zero_or_one',
        ErdOneOrMany: 'erd_one_or_many',
        ErdZeroOrMany: 'erd_zero_or_many',
    };
    ConnectorStyle.StrokeStyleEnum = {
        Normal: 'normal',
        Dotted: 'dotted',
        Dashed: 'dashed',
    };
    ConnectorStyle.TextOrientationEnum = {
        Horizontal: 'horizontal',
        Aligned: 'aligned',
    };
})(ConnectorStyle = exports.ConnectorStyle || (exports.ConnectorStyle = {}));

/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * @internal
 * Contains information about the style of a sticky note item, such as the fill color or text alignment.
 */
export declare class StickyNoteStyle {
    /**
     * Fill color for the sticky note. Default: `light_yellow`.
     */
    'fillColor'?: string | (typeof StickyNoteStyle.FillColorEnum)[keyof typeof StickyNoteStyle.FillColorEnum];
    /**
     * Defines how the sticky note text is horizontally aligned. Default: `center`.
     */
    'textAlign'?: string | (typeof StickyNoteStyle.TextAlignEnum)[keyof typeof StickyNoteStyle.TextAlignEnum];
    /**
     * Defines how the sticky note text is vertically aligned. Default: `top`.
     */
    'textAlignVertical'?: string | (typeof StickyNoteStyle.TextAlignVerticalEnum)[keyof typeof StickyNoteStyle.TextAlignVerticalEnum];
    /** @ignore */
    static discriminator: string | undefined;
    /** @ignore */
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    /** @ignore */
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace StickyNoteStyle {
    const FillColorEnum: {
        readonly Gray: "gray";
        readonly LightYellow: "light_yellow";
        readonly Yellow: "yellow";
        readonly Orange: "orange";
        readonly LightGreen: "light_green";
        readonly Green: "green";
        readonly DarkGreen: "dark_green";
        readonly Cyan: "cyan";
        readonly LightPink: "light_pink";
        readonly Pink: "pink";
        readonly Violet: "violet";
        readonly Red: "red";
        readonly LightBlue: "light_blue";
        readonly Blue: "blue";
        readonly DarkBlue: "dark_blue";
        readonly Black: "black";
    };
    const TextAlignEnum: {
        readonly Left: "left";
        readonly Right: "right";
        readonly Center: "center";
    };
    const TextAlignVerticalEnum: {
        readonly Top: "top";
        readonly Middle: "middle";
        readonly Bottom: "bottom";
    };
}

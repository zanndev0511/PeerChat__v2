"use strict";
/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WidgetDataOutputPlatformTags = void 0;
/**
 * @internal
 * Contains the item data, such as the item title, content, or description.
 */
class WidgetDataOutputPlatformTags {
    constructor() {
        /**
         * Status indicating whether an app card is connected and in sync with the source. When the source for the app card is deleted, the status returns `disabled`.
         */
        this['status'] = WidgetDataOutputPlatformTags.StatusEnum.Disconnected;
        /**
         * Defines the geometric shape of the sticky note and aspect ratio for its dimensions.
         */
        this['shape'] = WidgetDataOutputPlatformTags.ShapeEnum.Square;
        /**
         * Only custom frames are supported at the moment.
         */
        this['format'] = WidgetDataOutputPlatformTags.FormatEnum.Custom;
        /**
         * Only free form frames are supported at the moment.
         */
        this['type'] = WidgetDataOutputPlatformTags.TypeEnum.Freeform;
        /**
         * Hide or reveal the content inside a frame (Enterprise plan only).
         */
        this['showContent'] = true;
    }
    /** @ignore */
    static getAttributeTypeMap() {
        return WidgetDataOutputPlatformTags.attributeTypeMap;
    }
}
exports.WidgetDataOutputPlatformTags = WidgetDataOutputPlatformTags;
/** @ignore */
WidgetDataOutputPlatformTags.discriminator = undefined;
/** @ignore */
WidgetDataOutputPlatformTags.attributeTypeMap = [
    {
        name: 'content',
        baseName: 'content',
        type: 'string',
    },
    {
        name: 'contentType',
        baseName: 'contentType',
        type: 'string',
    },
    {
        name: 'description',
        baseName: 'description',
        type: 'string',
    },
    {
        name: 'html',
        baseName: 'html',
        type: 'string',
    },
    {
        name: 'mode',
        baseName: 'mode',
        type: 'WidgetDataOutputPlatformTags.ModeEnum',
    },
    {
        name: 'previewUrl',
        baseName: 'previewUrl',
        type: 'string',
    },
    {
        name: 'providerName',
        baseName: 'providerName',
        type: 'string',
    },
    {
        name: 'providerUrl',
        baseName: 'providerUrl',
        type: 'string',
    },
    {
        name: 'title',
        baseName: 'title',
        type: 'string',
    },
    {
        name: 'url',
        baseName: 'url',
        type: 'string',
    },
    {
        name: 'assigneeId',
        baseName: 'assigneeId',
        type: 'string',
    },
    {
        name: 'dueDate',
        baseName: 'dueDate',
        type: 'Date',
    },
    {
        name: 'fields',
        baseName: 'fields',
        type: 'Array<CustomField>',
    },
    {
        name: 'status',
        baseName: 'status',
        type: 'WidgetDataOutputPlatformTags.StatusEnum',
    },
    {
        name: 'imageUrl',
        baseName: 'imageUrl',
        type: 'string',
    },
    {
        name: 'documentUrl',
        baseName: 'documentUrl',
        type: 'string',
    },
    {
        name: 'shape',
        baseName: 'shape',
        type: 'WidgetDataOutputPlatformTags.ShapeEnum',
    },
    {
        name: 'format',
        baseName: 'format',
        type: 'WidgetDataOutputPlatformTags.FormatEnum',
    },
    {
        name: 'type',
        baseName: 'type',
        type: 'WidgetDataOutputPlatformTags.TypeEnum',
    },
    {
        name: 'showContent',
        baseName: 'showContent',
        type: 'boolean',
    },
];
(function (WidgetDataOutputPlatformTags) {
    WidgetDataOutputPlatformTags.ModeEnum = {
        Inline: 'inline',
        Modal: 'modal',
    };
    WidgetDataOutputPlatformTags.StatusEnum = {
        Disconnected: 'disconnected',
        Connected: 'connected',
        Disabled: 'disabled',
    };
    WidgetDataOutputPlatformTags.ShapeEnum = {
        Square: 'square',
        Rectangle: 'rectangle',
    };
    WidgetDataOutputPlatformTags.FormatEnum = {
        Custom: 'custom',
        Desktop: 'desktop',
        Phone: 'phone',
        Tablet: 'tablet',
        A4: 'a4',
        Letter: 'letter',
        Ratio1x1: 'ratio_1x1',
        Ratio4x3: 'ratio_4x3',
        Ratio16x9: 'ratio_16x9',
    };
    WidgetDataOutputPlatformTags.TypeEnum = {
        Freeform: 'freeform',
        Heap: 'heap',
        Grid: 'grid',
        Rows: 'rows',
        Columns: 'columns',
    };
})(WidgetDataOutputPlatformTags = exports.WidgetDataOutputPlatformTags || (exports.WidgetDataOutputPlatformTags = {}));
